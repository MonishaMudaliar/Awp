i. Function Overloading
CODE: 
.aspx
<%@ Page Language="C#" AutoEventWireup="true" 
CodeBehind="WebForm6.aspx.cs" Inherits="Practical_3b_2.WebForm6" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
 <title></title>
</head>
<body>
 <form id="form1" runat="server">
 <div>
 <asp:TextBox ID="TextBox1" runat="server"></asp:TextBox>
 <asp:TextBox ID="TextBox2" runat="server"></asp:TextBox>
 <asp:Button ID="Button1" runat="server" Text="Area of Circle" 
OnClick="Button1_Click" />
 <asp:Button ID="Button2" runat="server" Text="Area of Reactangle" 
OnClick="Button1_Click" />
 <asp:Button ID="Button3" runat="server" Text="Area of Square" 
OnClick="Button1_Click" />
 </div>
 </form>
</body>
</html>
.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace Practical_3b_2
{
 public partial class WebForm6 : System.Web.UI.Page
 {
 void area(int x)
 {
 Response.Write("area of a circle:" + 3.14 * x * x);
 }
 void area(int x, int y)
 {
AWP T.21.69 Monisha Mudaliar
 Response.Write("area of a rectangle:" + x * y);
 }
 void area(double x)
 {
 Response.Write("area of a square:" + x * x);
 }
 protected void Page_Load(object sender, EventArgs e)
 {
 }
 protected void Button1_Click(object sender, EventArgs e)
 {
 int x = Convert.ToInt32(TextBox1.Text);
 area(x);
 }
 protected void Button2_Click(object sender, EventArgs e)
 {
 int x = Convert.ToInt32(TextBox1.Text);
 int y = Convert.ToInt32(TextBox2.Text);
 area(x, y);
 }
 protected void Button3_Click(object sender, EventArgs e)
 {
 double x = Convert.ToDouble(TextBox2.Text);
 area(x); }
 }
}
